
@{
    ViewData["Title"] = "CreateJob";
    Layout = "~/Views/Shared/_MP_Back.cshtml";

    var JOBTYPE = (JOBTYPE[])ViewData["JOBTYPE"];
    var EMPLOYEE = (TBM_EMPLOYEE[])ViewData["EMPLOYEE"];
}

<div class="card-body">
    <div>
        <div id="divForm">
            <div class="container">
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="ddlType_job">Type Job</label>
                            <select id="ddlType_job" class="form-control">
                                <option value="" selected>Choose...</option>
                                @{
                                    if (JOBTYPE != null)
                                    {
                                        foreach (var item in JOBTYPE)
                                        {
                                            <option value="@item.JOBCODE">@item.JOBCODE -@item.JOBDESCRIPTION</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="ddlEmployee">Employee</label>
                            <select id="ddlEmployee" class="form-control">
                                <option value="" selected>Choose...</option>
                                @{
                                    if (EMPLOYEE != null)
                                    {
                                        foreach (var item in EMPLOYEE)
                                        {
                                            <option value="@item.USER_ID">@item.FULLNAME @item.LASTNAME</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="txtLicense_No">License No</label>
                            <input type="text" class="form-control" id="txtLicense_No" name="txtLicense_No" placeholder="License No">
                            <input type="hidden" class="form-control" id="txtLicense_Email" value="">
                            <input type="hidden" class="form-control" id="txtCustomerID">
                            <input type="hidden" class="form-control" id="txtLicense">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="txtEmail">Email</label>
                            <input type="text" class="form-control" id="txtEmail" name="txtEmail" placeholder="Email" maxlength="255" disabled>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class=" form-group col-md-12">
                            <label for="txtSummarry">Summarry</label>
                            <textarea type="text" rows="3" class="form-control" id="txtSummarry" name="txtSummarry" placeholder="Summarry"></textarea>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
</div>
<div class="card-footer bg-light">
    <div class="col-sm-12 text-center">
        <button id="btnSubmit" type="button" class="btn btn-primary" title="Submit" data-toggle="tooltip"><i class="fa fa-save"></i>&nbsp;Submit</button>
        <button id="btnBack" type="button" class="btn btn-dark" title="Back" data-toggle="tooltip"><i class="fa fa-arrow-left"></i>&nbsp;Back</button>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        SetAutocom();

        var objValidate = {};
        objValidate[GetElementName("txtLicense_No", objControl.txtbox)] = addValidate_notEmpty("Please Specify License No, Or Employee ID");
        BindValidate("divForm", objValidate);

        $('#btnSubmit').on('click', function () {
            if (CheckValidate("divForm")) {
                DialogConfirmSubmit(function () {
                    swal.disableButtons();

                    var obj = {
                        "JOB_ID": "",
                        "TYPE_JOB": GetValDropdown('ddlType_job'),
                        "OWNER_ID": GetValDropdown('ddlEmployee'),
                        "LICENSE_NO": GetValTextBox('txtLicense'),
                        "CUSTOMER_ID": GetValTextBox('txtCustomerID'),
                        "EMAIL_CUSTOMER": GetValTextBox('txtLicense_Email'),
                        'SUMMARY': GetValTextArea('txtSummarry'),
                        "REF_HJOB_ID": "",
                        "USER_ID": ""
                    }
                    BlockUI();
                    $.ajax({
                        url: '@Url.Action("SaveData", "Job")',
                        type: 'POST',
                        //contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        data: { 'data': obj },
                        success: function (response) {
                            UnblockUI();
                            if (response.Status == SysProcess.SessionExpired) {
                                PopupSessionTimeOut('@Url.Action("Index", "Login")');
                            } else if (response.Status == SysProcess.Duplicate) {
                                DialogDuplicate();
                            } else if (response.Status == SysProcess.Failed) {
                                //DialogSaveFail(response.Msg);
                                DialogWarning(response.Msg);
                            } else {
                                DialogSucessRedirect('@Url.Action("Index", "Job")');
                            }
                        },
                        error: function () {
                        }
                    });
                });
            }
        });

        $('#btnBack').on('click', function () {
            window.Redirect('@(Url.Action("Index",@ViewContext.RouteData.Values["Controller"].ToString()))');
        });
    });

    var IsSelectedtxtLicense_No = false;
    function SetAutocom() {
        $("input[id$=txtLicense_No]")
            .on("change", function () {
                if (!IsSelectedtxtLicense_No || !IsBrowserFirefox()) {
                    $("input[id$=txtLicense_Email]").val("");
                    $("input[id$=txtLicense_No]").val("");
                    $('#txtEmail').val("");
                    $("input[id$=txtCustomerID]").val("");
                    $("input[id$=txtLicense]").val("");
                    ReValidateFieldControl('divForm', $("input[name$=txtLicense_No]"))
                }
            }).focus(function () {
                IsSelectedtxtLicense_No = false;
            })
            .autocomplete({
                source: function (request, response) {
                    IsSelectedtxtLicense_No = false;

                    if (request.term.replace(/\s/g, "") != "" && request.term.replace(/\s/g, "").length >= 1) {
                        $.ajax({
                            url: UrlSearchLicense_No(),
                            type: 'POST',
                            dataType: 'json',
                            data: { 'License_No': request.term },
                            success: function (data) {
                                UnblockUI();
                                if (data.Status == SysProcess.SessionExpired) {
                                    PopupSessionTimeOut('@Url.Action("Index","Login")');
                                } else {
                                    response($.map(data.data, function (item) {
                                        return {
                                            value: item.LICENSE_NO + " - " + item.CUSTOMER_ID,
                                            label: item.LICENSE_NO + " - " + item.CUSTOMER_ID,
                                            CUSTOMER_ID: item.CUSTOMER_ID,
                                            EMAIL: item.EMAIL,
                                            LICENSE_NO: item.LICENSE_NO,

                                        }
                                    }));
                                }
                            },
                            error: function () {
                            }
                        });
                        //AjaxWebMethod(UrlSearchLicense_No(), { 'License_No': request.term }, function (data) {
                        //    UnblockUI();
                        //    response($.map(data, function (item) {
                        //        return {
                        //            value: item.LICENSE_NO + " - " + item.CUSTOMER_ID,
                        //            label: item.LICENSE_NO + " - " + item.CUSTOMER_ID,
                        //            CUSTOMER_ID: item.CUSTOMER_ID,
                        //            EMAIL: item.EMAIL,
                        //            LICENSE_NO: item.LICENSE_NO,

                        //        }
                        //    }));
                        //});
                    }
                },
                minLength: 1,
                select: function (event, ui) {
                    IsSelectedtxtLicense_No = true;
                    $("input[id$=txtLicense_Email]").val(ui.item.EMAIL);
                    $('#txtEmail').val(ui.item.EMAIL);
                    //$("input[id$=txtLicense_No]").val(ui.item.LICENSE_NO);
                    $("input[id$=txtCustomerID]").val(ui.item.CUSTOMER_ID);
                    $("input[id$=txtLicense]").val(ui.item.LICENSE_NO);
                    if (IsBrowserFirefox()) {
                        $("input[id$=txtLicense_No]").blur();
                    }
                }
            });
    }

    function UrlSearchLicense_No() {
        BlockUI();

        return '@Url.Action("GET_CUSTOMER_BY_LICENSE_NO", "Job")';
        }
</script>